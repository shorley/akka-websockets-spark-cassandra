version: '3.7'
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.5.5'
    restart: always
    hostname: pinot-zookeeper
    container_name: pinot-zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - pinot-network
    volumes:
      - zookeeper_data:/bitnami/zookeeper
  kafka:
    image: 'bitnami/kafka:2.2.1'
    hostname: pinot-kafka
    container_name: pinot-kafka
    restart: always
    ports:
      - '9092:9092'
      - '9093:9093'
    networks:
      - pinot-network
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=pinot-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://pinot-kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
  init-kafka:
    image: bitnami/kafka:2.2.1
    depends_on:
      - kafka
    environment:
      - KAFKA_STREAMIN_TOPIC=cryptocomparetopic
      - KAFKA_STREAMOUT_TOPIC=pinottopic
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      cd /opt/bitnami/kafka/bin
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server pinot-kafka:9093 --list

      echo -e 'Creating kafka topics ${KAFKA_STREAMIN_TOPIC}, ${KAFKA_STREAMOUT_TOPIC}'
      kafka-topics.sh --bootstrap-server pinot-kafka:9093 --create --topic ${KAFKA_STREAMIN_TOPIC:?cryptocomparetopic} --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server pinot-kafka:9093 --create --topic ${KAFKA_STREAMOUT_TOPIC:?pinottopic} --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server pinot-kafka:9093 --list
      "
    links:
      - kafka
    networks:
      - pinot-network
  pinot-controller:
    image: apachepinot/pinot:0.9.3
    command: "StartController -zkAddress pinot-zookeeper:2181"
    container_name: "pinot-controller"
    restart: unless-stopped
    ports:
      - "9090:9000"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms512m -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xloggc:gc-pinot-controller.log"
    depends_on:
      - zookeeper
    networks:
      - pinot-network
    volumes:
      - ../data/:/opt/data/
  pinot-broker:
    image: apachepinot/pinot:0.9.3
    command: "StartBroker -zkAddress pinot-zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-broker"
    ports:
      - "8099:8099"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms1G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xloggc:gc-pinot-broker.log"
    depends_on:
      - pinot-controller
    networks:
      - pinot-network
  pinot-server:
    image: apachepinot/pinot:0.9.3
    command: "StartServer -zkAddress pinot-zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-server"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms1G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xloggc:gc-pinot-server.log"
    depends_on:
      - pinot-broker
    networks:
      - pinot-network
volumes:
  zookeeper_data:
  kafka_data:

networks:
  pinot-network:
    name: pinot-network

